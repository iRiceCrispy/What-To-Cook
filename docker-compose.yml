version: '3.9'

services:
  postgres:
    container_name: what-to-cook_database
    image: postgres:12.9-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME:-what-to-cook}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_DATABASE:-what-to-cook_production}
    ports:
      - ${DB_PORT:-5432}:5432
    networks:
      - network
    volumes:
      - postgres-db:/var/lib/postgresql/data

  server:
    container_name: what-to-cook_server
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.server
    environment:
      - SECRET_KEY=${SECRET_KEY:-supersecretcode}
      - DB_USERNAME=${DB_USERNAME:-what-to-cook}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_DATABASE=${DB_DATABASE:-what-to-cook_production}
      - DB_HOST=postgres
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
    ports:
      - '${SERVER_PORT:-5000}:5000'
    networks:
      - network
    depends_on:
      - postgres

  client:
    container_name: what-to-cook_client
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - '${CLIENT_PORT:-3000}:80'
    networks:
      - network
    depends_on:
      - postgres
      - server

networks:
  network:
    driver: bridge

volumes:
  postgres-db:
    driver: local
